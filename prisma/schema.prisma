// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  isAdmin   Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt()
  products  Product[]
  reviews   Review[]
}

model Product {
  id           String   @id @default(uuid())
  name         String
  image        String
  brand        String
  category     String
  description  String
  rating       Int
  numReviews   Int
  price        Float
  countInStock Int
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  reviews      Review[]

  OrderItem   OrderItem? @relation(fields: [orderItemId], references: [id])
  orderItemId String?
  @@unique([id, userId])
}

model Review {
  id        String   @id @default(uuid())
  rating    Int
  comment   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product? @relation(fields: [productId], references: [id])
  productId String?
}

model Order {
  id                String           @id @default(uuid())
  itemsPrice        Float
  shippingPrice     Float
  taxPrice          Float
  totalPrice        Float
  isPaid            Boolean          @default(false)
  isDelivered       Boolean          @default(false)
  paidAt            DateTime
  deliveredAt       DateTime
  orderItems        OrderItem[]
  shippingAddress   ShippingAddress? @relation(fields: [shippingAddressId], references: [id])
  paymentResult     PaymentResult?   @relation(fields: [paymentResultId], references: [id])
  shippingAddressId String?          @unique
  paymentResultId   String?          @unique
}

model OrderItem {
  id       String    @id @default(uuid())
  name     String
  qty      Int
  image    String
  price    Float
  products Product[]
  order    Order?    @relation(fields: [orderId], references: [id])
  orderId  String?
}

model ShippingAddress {
  id         String @id @default(uuid())
  fullName   String
  address    String
  city       String
  postalCode Int
  country    String
  order      Order?
}

model PaymentResult {
  id            String @id
  status        String
  email_address String
  order         Order?
}
